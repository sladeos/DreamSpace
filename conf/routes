# Routes
# This file defines all application routes (Higher priority routes first)
# ~~~~

# Home page
GET     /                           controllers.Application.mainMethod()

#Get to packlist html-page
GET   /packlist controllers.Application.packlist()

# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.at(path="/public", file)

#Post to adduser - After register
POST    /user controllers.UserDatabase.addUser()

#Post to addFacebookuser after login
POST 	/addfacebookuser controllers.FacebookDatabase.addFacebookUser()

#Post to getuser - After login
POST    /userGet controllers.UserDatabase.getUser()

#Get to register user
GET     /register controllers.Application.newUserPage()

#Get to login
GET     /login controllers.Application.loginUserPage()

#Get to logout
GET     /logout controllers.Application.logout()

#Post to check if username exists route
POST 	/checkname controllers.UserDatabase.checkName()

#Post to check is Facebook user has a database entry
POST /facebookcheck controllers.FacebookDatabase.checkIfExistsFacebook()

#Existing FbUser Login
GET /existfacebooklogin controllers.Application.facebookExistLogin()

#Get to choosing username
GET /chooseusername controllers.Application.chooseUsername()

# Post to save created EArenaAd
POST /savearenaad controllers.EArenaDatabase.addEArenaAd()

#Get tournament page
GET /createtournament controllers.Application.tournament()

#Post to save tournament created
POST /savetournament controllers.TournamentDatabase.addTournament()

#Post to delete tournament
POST /deletetournament controllers.TournamentDatabase.deleteTournament()

#Post to delete arenaad
POST /deleteearena controllers.EArenaDatabase.deleteArena()

#Post to save edited tournament
POST /edittournament controllers.TournamentDatabase.editTournament()

#Gets specific tournament depending on the integer following /showtournament/
GET  /showtournament/:id controllers.Application.showTournament(id: Integer)

#Retrives list of currentuser's tournaments
GET /mainetournament controllers.TournamentDatabase.getTournaments()

# Shows createAd webpage
GET /createarenaad controllers.Application.createArenaAd()

# Post to save created EArenaAd
POST /savearenaad controllers.EArenaDatabase.addEArenaAd()

#Shows Main EArena Page with all/newest Ads
GET /mainearena controllers.Application.mainearena(search: String ?= "", game: String ?= "", username: String ?= "", players: String ?= "", minutes: String ?= "")

#Shows User's EArena Ads
GET /myearena controllers.EArenaDatabase.getMyEArenaAds()

#Shows Individual EArenaAd and determines if the Currentuser is an admin to the ad or not, returns page depending on answer
GET /earenaad/:id controllers.Application.showIndividualAd(id: Integer)

#Posts reply to an individual EArena Ad. Ajax call.
POST /postreply controllers.EArenaDatabase.addReply()

#Sends update data for EArena Ad to method
POST /updateearenaad controllers.EArenaDatabase.updateEArenaAd()

#Retrieves User's tournaments
GET /myetournaments controllers.TournamentDatabase.getMyTournaments()

#Gets new picture page
GET /newpicture controllers.Application.newPicture()

#Post to save User's Picture
POST /savepicture controllers.PictureDatabase.savePicture()

#Get to retrive pictures
GET /pictures controllers.PictureDatabase.getPictures()
